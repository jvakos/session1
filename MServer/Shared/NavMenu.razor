@using MServer.Data
@using Microsoft.AspNetCore.Identity
@using Microsoft.EntityFrameworkCore
@inject UserManager<User> userManager
@inject AuthenticationStateProvider authState

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">MServer</a>
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>

<div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
    <nav class="flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="oi oi-home" aria-hidden="true"></span> Home
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="counter">
                <span class="oi oi-plus" aria-hidden="true"></span> Counter
            </NavLink>
        </div>

        @if (IsAdmin)
        {
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="fetchdata">
                    <span class="oi oi-list-rich" aria-hidden="true"></span> Fetch data
                </NavLink>
            </div>
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="product/edit">
                    <span class="oi oi-list-rich" aria-hidden="true"></span> Manage Products
                </NavLink>
            </div>
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="product-list">
                    <span class="oi oi-list-rich" aria-hidden="true"></span> Products
                </NavLink>
            </div>
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="Model/edit">
                    <span class="oi oi-list-rich" aria-hidden="true"></span> Manage Models
                </NavLink>
            </div>


        }
    </nav>
</div>

@code {
    private bool collapseNavMenu = true;

    bool IsAdmin;
    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    protected override async Task OnInitializedAsync()
    {
        var auth = await authState.GetAuthenticationStateAsync();
        if (auth?.User?.Identity?.Name == null) return;

        using var db = new Database();
        var user = db.Users.Where(x => x.UserName == auth.User.Identity.Name).AsNoTracking().FirstOrDefault();
        if (user != null)
        {
            IsAdmin = await userManager.IsInRoleAsync(user, "Admin");
        }
        else
        {
            IsAdmin = false;
        }
    }

}
