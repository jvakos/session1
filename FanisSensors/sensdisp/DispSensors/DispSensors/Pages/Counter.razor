@page "/counter"

<PageTitle>Counter</PageTitle>


<input @bind-value="UserInput" @bind-value:event="oninput" @onkeydown="CheckInput"></input>

<SfButton @onclick="Calc"  Content="Click me"></SfButton>
<SfButton @onclick="Style" Content="Click me2"></SfButton>
<SfButton @onclick="Style2" Content="Click me2"></SfButton>



<p>Current Num: @val</p>

<div class="@fanis[sval]" style="@(string.Join(';',mystyles))">random text</div>





<FGauge Percent="gaugePercent" />



@code {
    
    private int UserInput { get; set; }
    public int val;
    int gaugePercent = 0;
    public int sval;
    public string[] fanis = new string[2] {"fanis", "fanis2"};
    List<string> mystyles = new List<string>();
    int fontSize = 18;
    private void CheckInput(KeyboardEventArgs keyEvent)
    {
        if(keyEvent.Key == "Enter")
        {
            val = UserInput;            
        }
    }
    private void Calc()
    {
        if(val%2 != 0)
        {
            val = (val*3) + 1;
        }
        val = val/2;
    }
    public void Style()
    {
        sval=0;
        mystyles.Clear();
        gaugePercent += 20;

    }
    public void Style2()
    {
        sval=1;
        fontSize++;
        mystyles.Clear();
        mystyles.Add($"font-size:{fontSize}px");
        mystyles.Add($"background-color:red");
    }

 class SerialPortProgram 
 { 
  // Create the serial port with basic settings 
    private SerialPort port = new   SerialPort("COM1", 9600, Parity.None, 8, StopBits.One); 
    [STAThread] 
    static void Main(string[] args) 
    { 
      // Instatiate this 
      SerialPortProgram(); 
    } 

    private static void SerialPortProgram() 
    { 
        Console.WriteLine("Incoming Data:");
         // Attach a method to be called when there
         // is data waiting in the port's buffer 
        port.DataReceived += new SerialDataReceivedEventHandler(port_DataReceived); 
        // Begin communications 
        port.Open(); 
        // Enter an application loop to keep this thread alive 
        Console.ReadLine();
     } 

    private void port_DataReceived(object sender, SerialDataReceivedEventArgs e) 
    { 
       // Show all the incoming data in the port's buffer
       Console.WriteLine(port.ReadExisting()); 
    } 
}    
}